{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\gio-v\\\\source\\\\repos\\\\React-CRUD-with-Asp.Net-Core-Web-API\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\gio-v\\\\source\\\\repos\\\\React-CRUD-with-Asp.Net-Core-Web-API\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\n\nconst useForm = (initialFieldValues, validate, setCurrentId) => {\n  const _useState = useState(initialFieldValues),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errors = _useState4[0],\n        setErrors = _useState4[1];\n\n  const handleInputChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    const fieldValue = {\n      [name]: value\n    };\n    setValues(_objectSpread({}, values, {}, fieldValue));\n    validate(fieldValue);\n  };\n\n  const resetForm = () => {\n    setValues(_objectSpread({}, initialFieldValues));\n    setErrors({});\n    setCurrentId(0);\n  };\n\n  return {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/gio-v/source/repos/React-CRUD-with-Asp.Net-Core-Web-API/react-app/src/components/useForm.js"],"names":["React","useState","useEffect","useForm","initialFieldValues","validate","setCurrentId","values","setValues","errors","setErrors","handleInputChange","e","target","name","value","fieldValue","resetForm"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,OAAO,GAAG,CAACC,kBAAD,EAAqBC,QAArB,EAA+BC,YAA/B,KAAgD;AAAA,oBAChCL,QAAQ,CAACG,kBAAD,CADwB;AAAA;AAAA,QACrDG,MADqD;AAAA,QAC7CC,SAD6C;;AAAA,qBAEhCP,QAAQ,CAAC,EAAD,CAFwB;AAAA;AAAA,QAErDQ,MAFqD;AAAA,QAE7CC,SAF6C;;AAI5D,QAAMC,iBAAiB,GAAGC,CAAC,IAAI;AAAA,sBACHA,CAAC,CAACC,MADC;AAAA,UACnBC,IADmB,aACnBA,IADmB;AAAA,UACbC,KADa,aACbA,KADa;AAE3B,UAAMC,UAAU,GAAG;AAAE,OAACF,IAAD,GAAQC;AAAV,KAAnB;AACAP,IAAAA,SAAS,mBACFD,MADE,MAEFS,UAFE,EAAT;AAIAX,IAAAA,QAAQ,CAACW,UAAD,CAAR;AACH,GARD;;AAUA,QAAMC,SAAS,GAAG,MAAM;AACpBT,IAAAA,SAAS,mBACFJ,kBADE,EAAT;AAGAM,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAJ,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACH,GAND;;AAQA,SAAO;AACHC,IAAAA,MADG;AAEHC,IAAAA,SAFG;AAGHC,IAAAA,MAHG;AAIHC,IAAAA,SAJG;AAKHC,IAAAA,iBALG;AAMHM,IAAAA;AANG,GAAP;AAQH,CA9BD;;AAgCA,eAAed,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (initialFieldValues, validate, setCurrentId) => {\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        const fieldValue = { [name]: value }\r\n        setValues({\r\n            ...values,\r\n            ...fieldValue\r\n        })\r\n        validate(fieldValue)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues({\r\n            ...initialFieldValues\r\n        })\r\n        setErrors({})\r\n        setCurrentId(0)\r\n    }\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    };\r\n}\r\n\r\nexport default useForm;"]},"metadata":{},"sourceType":"module"}