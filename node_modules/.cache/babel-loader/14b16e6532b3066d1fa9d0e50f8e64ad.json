{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\gio-v\\\\source\\\\repos\\\\React-CRUD-with-Asp.Net-Core-Web-API\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\gio-v\\\\source\\\\repos\\\\React-CRUD-with-Asp.Net-Core-Web-API\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\gio-v\\\\source\\\\repos\\\\React-CRUD-with-Asp.Net-Core-Web-API\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\gio-v\\\\source\\\\repos\\\\React-CRUD-with-Asp.Net-Core-Web-API\\\\react-app\\\\src\\\\components\\\\DCandidateForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\nimport useForm from \"./useForm\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/dCandidate\";\nimport { useToasts } from \"react-toast-notifications\";\n\nconst styles = theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      minWidth: 230\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 230\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  }\n});\n\nconst initialFieldValues = {\n  fullName: '',\n  mobile: '',\n  email: '',\n  age: '',\n  bloodGroup: '',\n  address: ''\n};\n\nconst DCandidateForm = (_ref) => {\n  let classes = _ref.classes,\n      props = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  //toast msg.\n  const _useToasts = useToasts(),\n        addToast = _useToasts.addToast; //validate()\n  //validate({fullName:'jenny'})\n\n\n  const validate = (fieldValues = values) => {\n    let temp = _objectSpread({}, errors);\n\n    if ('fullName' in fieldValues) temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\n    if ('mobile' in fieldValues) temp.mobile = fieldValues.mobile ? \"\" : \"This field is required.\";\n    if ('bloodGroup' in fieldValues) temp.bloodGroup = fieldValues.bloodGroup ? \"\" : \"This field is required.\";\n    if ('email' in fieldValues) temp.email = /^$|.+@.+..+/.test(fieldValues.email) ? \"\" : \"Email is not valid.\";\n    setErrors(_objectSpread({}, temp));\n    if (fieldValues == values) return Object.values(temp).every(x => x == \"\");\n  };\n\n  const _useForm = useForm(initialFieldValues, validate, props.setCurrentId),\n        values = _useForm.values,\n        setValues = _useForm.setValues,\n        errors = _useForm.errors,\n        setErrors = _useForm.setErrors,\n        handleInputChange = _useForm.handleInputChange,\n        resetForm = _useForm.resetForm; //material-ui select\n\n\n  const inputLabel = React.useRef(null);\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        labelWidth = _React$useState2[0],\n        setLabelWidth = _React$useState2[1];\n\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      const onSuccess = () => {\n        resetForm();\n        addToast(\"Submitted successfully\", {\n          appearance: 'success'\n        });\n      };\n\n      if (props.currentId == 0) props.createDCandidate(values, onSuccess);else props.updateDCandidate(props.currentId, values, onSuccess);\n    }\n  };\n\n  useEffect(() => {\n    if (props.currentId != 0) {\n      setValues(_objectSpread({}, props.dCandidateList.find(x => x.id == props.currentId)));\n      setErrors({});\n    }\n  }, [props.currentId]);\n  return React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: classes.root,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(TextField, Object.assign({\n    name: \"fullName\",\n    variant: \"outlined\",\n    label: \"Full Name\",\n    value: values.fullName,\n    onChange: handleInputChange\n  }, errors.fullName && {\n    error: true,\n    helperText: errors.fullName\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(TextField, Object.assign({\n    name: \"email\",\n    variant: \"outlined\",\n    label: \"Email\",\n    value: values.email,\n    onChange: handleInputChange\n  }, errors.email && {\n    error: true,\n    helperText: errors.email\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(FormControl, Object.assign({\n    variant: \"outlined\",\n    className: classes.formControl\n  }, errors.bloodGroup && {\n    error: true\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(InputLabel, {\n    ref: inputLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Blood Group\"), React.createElement(Select, {\n    name: \"bloodGroup\",\n    value: values.bloodGroup,\n    onChange: handleInputChange,\n    labelWidth: labelWidth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Select Blood Group\"), React.createElement(MenuItem, {\n    value: \"A+\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"A +ve\"), React.createElement(MenuItem, {\n    value: \"A-\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"A -ve\"), React.createElement(MenuItem, {\n    value: \"B+\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"B +ve\"), React.createElement(MenuItem, {\n    value: \"B-\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"B -ve\"), React.createElement(MenuItem, {\n    value: \"AB+\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"AB +ve\"), React.createElement(MenuItem, {\n    value: \"AB-\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"AB -ve\"), React.createElement(MenuItem, {\n    value: \"O+\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"O +ve\"), React.createElement(MenuItem, {\n    value: \"O-\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"O -ve\")), errors.bloodGroup && React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, errors.bloodGroup))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(TextField, Object.assign({\n    name: \"mobile\",\n    variant: \"outlined\",\n    label: \"Mobile\",\n    value: values.mobile,\n    onChange: handleInputChange\n  }, errors.mobile && {\n    error: true,\n    helperText: errors.mobile\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(TextField, {\n    name: \"age\",\n    variant: \"outlined\",\n    label: \"Age\",\n    value: values.age,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    name: \"address\",\n    variant: \"outlined\",\n    label: \"Address\",\n    value: values.address,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    className: classes.smMargin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.smMargin,\n    onClick: resetForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Reset\")))));\n};\n\nconst mapStateToProps = state => ({\n  dCandidateList: state.dCandidate.list\n});\n\nconst mapActionToProps = {\n  createDCandidate: actions.create,\n  updateDCandidate: actions.update\n};\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(DCandidateForm));","map":{"version":3,"sources":["C:/Users/gio-v/source/repos/React-CRUD-with-Asp.Net-Core-Web-API/react-app/src/components/DCandidateForm.js"],"names":["React","useState","useEffect","Grid","TextField","withStyles","FormControl","InputLabel","Select","MenuItem","Button","FormHelperText","useForm","connect","actions","useToasts","styles","theme","root","margin","spacing","minWidth","formControl","smMargin","initialFieldValues","fullName","mobile","email","age","bloodGroup","address","DCandidateForm","classes","props","addToast","validate","fieldValues","values","temp","errors","test","setErrors","Object","every","x","setCurrentId","setValues","handleInputChange","resetForm","inputLabel","useRef","labelWidth","setLabelWidth","current","offsetWidth","handleSubmit","e","preventDefault","onSuccess","appearance","currentId","createDCandidate","updateDCandidate","dCandidateList","find","id","error","helperText","mapStateToProps","state","dCandidate","list","mapActionToProps","create","update"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\r\nimport useForm from \"./useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/dCandidate\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst initialFieldValues = {\r\n    fullName: '',\r\n    mobile: '',\r\n    email: '',\r\n    age: '',\r\n    bloodGroup: '',\r\n    address: ''\r\n}\r\n\r\nconst DCandidateForm = ({ classes, ...props }) => {\r\n\r\n    //toast msg.\r\n    const { addToast } = useToasts()\r\n\r\n    //validate()\r\n    //validate({fullName:'jenny'})\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile ? \"\" : \"This field is required.\"\r\n        if ('bloodGroup' in fieldValues)\r\n            temp.bloodGroup = fieldValues.bloodGroup ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/^$|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFieldValues, validate, props.setCurrentId)\r\n\r\n    //material-ui select\r\n    const inputLabel = React.useRef(null);\r\n    const [labelWidth, setLabelWidth] = React.useState(0);\r\n    React.useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n    }, []);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const onSuccess = () => {\r\n                resetForm()\r\n                addToast(\"Submitted successfully\", { appearance: 'success' })\r\n            }\r\n            if (props.currentId == 0)\r\n                props.createDCandidate(values, onSuccess)\r\n            else\r\n                props.updateDCandidate(props.currentId, values, onSuccess)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.currentId != 0) {\r\n            setValues({\r\n                ...props.dCandidateList.find(x => x.id == props.currentId)\r\n            })\r\n            setErrors({})\r\n        }\r\n    }, [props.currentId])\r\n\r\n    return (\r\n        <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <TextField\r\n                        name=\"fullName\"\r\n                        variant=\"outlined\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        {...(errors.fullName && { error: true, helperText: errors.fullName })}\r\n                    />\r\n                    <TextField\r\n                        name=\"email\"\r\n                        variant=\"outlined\"\r\n                        label=\"Email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        {...(errors.email && { error: true, helperText: errors.email })}\r\n                    />\r\n                    <FormControl variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                        {...(errors.bloodGroup && { error: true })}\r\n                    >\r\n                        <InputLabel ref={inputLabel}>Blood Group</InputLabel>\r\n                        <Select\r\n                            name=\"bloodGroup\"\r\n                            value={values.bloodGroup}\r\n                            onChange={handleInputChange}\r\n                            labelWidth={labelWidth}\r\n                        >\r\n                            <MenuItem value=\"\">Select Blood Group</MenuItem>\r\n                            <MenuItem value=\"A+\">A +ve</MenuItem>\r\n                            <MenuItem value=\"A-\">A -ve</MenuItem>\r\n                            <MenuItem value=\"B+\">B +ve</MenuItem>\r\n                            <MenuItem value=\"B-\">B -ve</MenuItem>\r\n                            <MenuItem value=\"AB+\">AB +ve</MenuItem>\r\n                            <MenuItem value=\"AB-\">AB -ve</MenuItem>\r\n                            <MenuItem value=\"O+\">O +ve</MenuItem>\r\n                            <MenuItem value=\"O-\">O -ve</MenuItem>\r\n                        </Select>\r\n                        {errors.bloodGroup && <FormHelperText>{errors.bloodGroup}</FormHelperText>}\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n\r\n                    <TextField\r\n                        name=\"mobile\"\r\n                        variant=\"outlined\"\r\n                        label=\"Mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        {...(errors.mobile && { error: true, helperText: errors.mobile })}\r\n                    />\r\n                    <TextField\r\n                        name=\"age\"\r\n                        variant=\"outlined\"\r\n                        label=\"Age\"\r\n                        value={values.age}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <TextField\r\n                        name=\"address\"\r\n                        variant=\"outlined\"\r\n                        label=\"Address\"\r\n                        value={values.address}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            className={classes.smMargin}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            className={classes.smMargin}\r\n                            onClick={resetForm}\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    dCandidateList: state.dCandidate.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    createDCandidate: actions.create,\r\n    updateDCandidate: actions.update\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(DCandidateForm));"]},"metadata":{},"sourceType":"module"}